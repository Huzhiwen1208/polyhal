var searchIndex = new Map(JSON.parse('[\
["polyhal",{"t":"PPPPPPFGPPPPSSSKPPPSPPPPPPFGGSPPSCMCXHXNNNNNNNNNNNNNNNNCHHMCHHHNNNNNNNNNNOHHHHNNNNHCNNNNNCHCCNCCEHHHOHOHNCNNNNNNNNNNNNNNNNNHOFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNSSFNNNNNNNNNNFNNNNNNNNFNNNNNNNFNNNNNNNNNFNNNNNNNNFNNNNNNNNNNNNNNNNNTTTTTFGTPFFTTFTTTTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNN","n":["ARG0","ARG1","ARG2","Breakpoint","IllegalInstruction","InstructionPageFault","KContext","KContextArgs","KPC","KSP","KTP","LoadPageFault","MULTI_CORE_AREA","MULTI_CORE_AREA_SIZE","PAGE_SIZE","PageAlloc","RA","RET","SEPC","SIG_RETURN_ADDR","SP","SYSCALL","StorePageFault","SupervisorExternal","TLS","Time","TrapFrame","TrapFrameArgs","TrapType","USER_VADDR_END","Unknown","UserEnvCall","VIRT_ADDR_START","addr","alloc","api","arch_entry","arch_init","arch_interrupt","args","blank","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consts","context_switch","context_switch_pt","dealloc","debug","disable_irq","enable_external_irq","enable_irq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","fsx","get_cpu_num","get_fdt","get_mem_areas","hart_id","index","index","index_mut","index_mut","init","instruction","into","into","into","into","into","irq","kernel_page_table","mem","multicore","new","once","pagetable","percpu","read_current_tp","run_user_task","run_user_task_forever","sepc","shutdown","sstatus","switch_to_kernel_page_table","syscall_ok","time","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","wfi","x","PhysAddr","PhysPage","VirtAddr","VirtPage","add","add","add","addr","addr","as_num","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","copy_value_from_another","drop_clear","eq","eq","eq","eq","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_addr","from_addr","get_buffer","get_cstr","get_cstr","get_mut_ptr","get_mut_ptr","get_mut_ref","get_ptr","get_ptr","get_ref","into","into","into","into","new","new","new","new","partial_cmp","partial_cmp","partial_cmp","partial_cmp","pn_index","pn_offest","slice_mut_with_len","slice_mut_with_len","slice_until","slice_with_len","slice_with_len","to_addr","to_addr","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","STACK_SIZE","TRAPFRAME_SIZE","DebugConsole","borrow","borrow_mut","from","getchar","into","putchar","try_from","try_into","type_id","write_str","Instruction","borrow","borrow_mut","ebreak","from","into","try_from","try_into","type_id","IRQ","borrow","borrow_mut","from","into","try_from","try_into","type_id","Barrier","borrow","borrow_mut","complete_sync","from","into","ordering_sync","try_from","try_into","type_id","MultiCore","boot_all","borrow","borrow_mut","from","into","try_from","try_into","type_id","LazyInit","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","get_mut_unchecked","get_unchecked","init_by","into","is_init","new","try_from","try_get","try_into","type_id","A","Cache","D","Device","G","MappingFlags","MappingSize","P","Page4KB","PageTable","PageTableWrapper","R","RWX","TLB","U","URW","URWX","URX","W","X","all","alloc","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","change","clone","clone","clone_into","clone_into","cmp","complement","contains","current","deref","difference","drop","empty","eq","extend","flush_all","flush_vaddr","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits_retain","from_bits_retain","from_bits_truncate","from_iter","from_name","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","is_all","is_empty","iter","iter_names","kernel_pte_entry","map_kernel","map_page","not","partial_cmp","release","remove","restore","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap_page","Time","borrow","borrow_mut","clone","clone_into","fmt","from","from_raw","get_freq","into","now","raw","to_msec","to_nsec","to_owned","to_usec","try_from","try_into","type_id"],"q":[[0,"polyhal"],[125,"polyhal::addr"],[234,"polyhal::consts"],[236,"polyhal::debug"],[247,"polyhal::instruction"],[256,"polyhal::irq"],[264,"polyhal::mem"],[274,"polyhal::multicore"],[283,"polyhal::once"],[301,"polyhal::pagetable"],[424,"polyhal::time"],[443,"polyhal::currrent_arch::context"],[444,"polyhal::currrent_arch::kcontext"],[445,"core::fmt"],[446,"fdt"],[447,"core::option"],[448,"alloc::vec"],[449,"core::result"],[450,"core::any"],[451,"core::cmp"],[452,"core::ffi::c_str"],[453,"alloc::string"],[454,"core::iter::traits::collect"],[455,"core::hash"],[456,"bitflags::iter"],[457,"polyhal::currrent_arch::consts"],[458,"polyhal_macro"],[459,"polyhal::currrent_arch"],[460,"polyhal::currrent_arch::interrupt"],[461,"polyhal::currrent_arch::entry"],[462,"polyhal::currrent_arch::sbi"]],"i":[15,15,15,10,10,10,0,0,14,14,14,10,0,0,0,0,15,15,15,0,15,15,10,10,15,10,0,0,0,0,10,10,0,0,1,0,0,0,0,5,8,5,8,14,15,10,5,8,14,15,10,5,10,5,10,0,0,0,1,0,0,0,0,5,8,14,15,10,5,8,14,15,10,5,0,0,0,0,5,8,5,8,0,0,5,8,14,15,10,0,0,0,0,5,0,0,0,0,0,0,5,0,5,0,5,0,5,10,5,8,14,15,10,5,8,14,15,10,5,8,14,15,10,0,5,0,0,0,0,3,3,23,24,25,3,24,25,3,23,24,25,3,23,25,24,25,3,23,24,25,3,23,24,25,3,23,3,3,24,25,3,23,25,24,24,25,25,3,3,23,23,24,24,25,25,25,3,3,3,23,23,23,3,23,3,24,25,24,25,25,24,25,25,24,25,3,23,24,25,3,23,24,25,3,23,23,25,24,25,25,24,25,3,23,24,25,3,23,24,25,3,23,24,25,3,23,24,25,3,23,24,25,3,23,0,0,0,34,34,34,34,34,34,34,34,34,34,0,48,48,48,48,48,48,48,48,0,49,49,49,49,49,49,49,0,50,50,50,50,50,50,50,50,50,0,51,51,51,51,51,51,51,51,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,38,38,38,38,38,0,0,38,43,0,0,38,38,0,38,38,38,38,38,38,38,39,38,38,38,38,38,38,38,38,52,38,43,11,39,52,38,43,11,39,11,38,11,38,11,38,38,38,11,39,38,39,38,38,38,52,52,38,38,38,38,38,43,11,39,52,38,43,11,39,38,38,38,38,38,38,38,38,38,38,52,38,43,11,39,38,38,38,38,38,11,11,11,38,38,11,38,11,38,38,38,38,38,11,38,11,52,38,43,11,39,52,38,43,11,39,52,38,43,11,39,38,11,0,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47],"f":"``````````````````````````````````{{{d{b}}}f}``{{}h}`{{{d{j}}}{{n{l}}}}{{}A`}{{{d{c}}}{{d{e}}}{}{}}0000{{{d{Abc}}}{{d{Abe}}}{}{}}0000{{{d{j}}}j}{{{d{Ad}}}Ad}{{{d{c}}{d{Abe}}}h{}{}}0`{{A`A`}h}{{A`A`Af}h}{{{d{b}}f}h}`:::{{{d{j}}{d{AbAh}}}Aj}{{{d{A`}}{d{AbAh}}}Aj}{{{d{Al}}{d{AbAh}}}Aj}{{{d{An}}{d{AbAh}}}Aj}{{{d{Ad}}{d{AbAh}}}Aj}{cc{}}0000`{{}l}{{}{{Bb{B`}}}}{{}{{Bf{{Bd{ll}}}}}}2{{{d{j}}An}{{d{c}}}{}}{{{d{A`}}Al}{{d{c}}}{}}{{{d{Abj}}An}{{d{Abc}}}{}}{{{d{AbA`}}Al}{{d{Abc}}}{}}{{{d{b}}}h}`{ce{}{}}0000`{{}Af}``{{}j}```:{{{d{Abj}}}{{Bb{h}}}}{{{d{Abj}}}Bh}`{{}Bh}`{{}h}{{{d{Abj}}}h}`{{{d{c}}}e{}{}}0{c{{Bj{e}}}{}{}}000000000{{{d{c}}}Bl{}}00004`````{{fl}c{}}{{ff}c{}}{{Bnl}c{}}{{{d{C`}}}l}{{{d{Cb}}}l}{{{d{f}}}l}{{{d{c}}}{{d{e}}}{}{}}000{{{d{Abc}}}{{d{Abe}}}{}{}}000{{{d{Cb}}}Cb}{{{d{C`}}}C`}1{{{d{f}}}f}{{{d{Bn}}}Bn}{{{d{c}}{d{Abe}}}h{}{}}000{{{d{C`}}{d{C`}}}Cd}{{{d{Cb}}{d{Cb}}}Cd}{{{d{f}}{d{f}}}Cd}{{{d{Bn}}{d{Bn}}}Cd}{{{d{f}}f}h}{{{d{f}}}h}{{{d{C`}}{d{C`}}}Cf}{{{d{Cb}}{d{Cb}}}Cf}{{{d{f}}{d{f}}}Cf}{{{d{Bn}}{d{Bn}}}Cf}>{{{d{C`}}{d{AbAh}}}Aj}0{{{d{Cb}}{d{AbAh}}}Aj}0{{{d{f}}{d{AbAh}}}Aj}0{{{d{Bn}}{d{AbAh}}}Aj}0{fC`}{cc{}}{lCb}{BnCb}22{C`f}{lf}4{CbBn}{lBn}20{{{d{f}}}{{d{Ab{Cj{Ch}}}}}}{{{d{C`}}}{{d{Cl}}}}{{{d{Cb}}}{{d{Cl}}}}{{{d{C`}}}}{{{d{Cb}}}}{{{d{Cb}}}{{d{Abc}}}{}}21{{{d{Cb}}}{{d{c}}}{}}{ce{}{}}000{lC`}>;9{{{d{C`}}{d{C`}}}{{Bb{Cd}}}}{{{d{Cb}}{d{Cb}}}{{Bb{Cd}}}}{{{d{f}}{d{f}}}{{Bb{Cd}}}}{{{d{Bn}}{d{Bn}}}{{Bb{Cd}}}}{{{d{Bn}}l}l}{{{d{Cb}}l}l}{{{d{C`}}l}{{d{Ab{Cj{c}}}}}{}}{{{d{Cb}}l}{{d{Ab{Cj{c}}}}}{}}{{{d{Cb}}{D`{c}{{Cn{Cf}}}}}{{d{Ab{Cj{c}}}}}{}}{{{d{C`}}l}{{d{{Cj{c}}}}}{}}{{{d{Cb}}l}{{d{{Cj{c}}}}}{}}{{{d{f}}}l}{{{d{Bn}}}l}{{{d{c}}}e{}{}}000{{{d{c}}}Db{}}000{c{{Bj{e}}}{}{}}0000000{{{d{c}}}Bl{}}000```{{{d{c}}}{{d{e}}}{}{}}{{{d{Abc}}}{{d{Abe}}}{}{}}{cc{}}{{}{{Bb{Ch}}}}{ce{}{}}{Chh}776{{{d{AbDd}}{d{Df}}}Aj}`65{{}h}53998`7653998`760530998`07653998`76{{{d{{Dh{c}}}}}{{d{c}}}{}}{{{d{Ab{Dh{c}}}}}{{d{Abc}}}{}}{{{d{Ab{Dh{c}}}}}h{}}{{{d{{Dh{c}}}}{d{AbAh}}}AjDj}923{{{d{{Dh{c}}}}c}h{}}8{{{d{{Dh{c}}}}}Cf{}}{{}{{Dh{c}}}{}}{c{{Bj{e}}}{}{}}{{{d{{Dh{c}}}}}{{Bb{{d{c}}}}}{}}1{{{d{c}}}Bl{}}````````````````````{{}Dl}{{}Dn}{{DlDl}Dl}{{{d{AbDl}}Dl}h}10{{{d{Dl}}}E`}021{{{d{c}}}{{d{e}}}{}{}}0000{{{d{Abc}}}{{d{Abe}}}{}{}}0000{{{d{Af}}}h}{{{d{Dl}}}Dl}{{{d{Af}}}Af}{{{d{c}}{d{Abe}}}h{}{}}0{{{d{Dl}}{d{Dl}}}Cd}{DlDl}{{{d{Dl}}Dl}Cf}{{}Af}{{{d{Dn}}}{{d{c}}}{}}={{{d{AbDn}}}h}{{}Dl}{{{d{Dl}}{d{Dl}}}Cf}{{{d{AbDl}}c}h{{Ed{}{{Eb{Dl}}}}}}{{}h}{Cbh}{{{d{Dl}}{d{AbAh}}}Aj}0000{{{d{Ef}}{d{AbAh}}}Aj}{{{d{Af}}{d{AbAh}}}Aj}{{{d{Dn}}{d{AbAh}}}Aj}{cc{}}0000{E`{{Bb{Dl}}}}{E`Dl}00{cDl{{Ed{}{{Eb{Dl}}}}}}{{{d{Df}}}{{Bb{Dl}}}}{{{d{Dl}}{d{Abc}}}hEh}{{{d{AbDl}}Dl}h}{{DlDl}Dl}{{{d{Dl}}Dl}Cf}{ce{}{}}0000{Dlc{}}{{{d{Dl}}}Cf}0{{{d{Dl}}}{{Ej{Dl}}}}{{{d{Dl}}}{{El{Dl}}}}{{{d{Af}}}C`}{{{d{Af}}BnfDlEf}h}0{DlDl}{{{d{Dl}}{d{Dl}}}{{Bb{Cd}}}}{{{d{Af}}}h}<0{{{d{AbDl}}DlCf}h}<=<{{{d{c}}}e{}{}}0>{{{d{Af}}Cb}{{Bb{{Bd{C`Dl}}}}}}{c{{Bj{e}}}{}{}}000000000{{{d{c}}}Bl{}}0000{{DlDl}Dl}{{{d{Af}}Bn}h}`{{{d{c}}}{{d{e}}}{}{}}{{{d{Abc}}}{{d{Abe}}}{}{}}{{{d{En}}}En}{{{d{c}}{d{Abe}}}h{}{}}{{{d{En}}{d{AbAh}}}Aj}{cc{}}{lEn}{{}l}{ce{}{}}{{}En}{{{d{En}}}l}00{{{d{c}}}e{}{}}1??>","D":"A@j","p":[[10,"PageAlloc",0],[1,"reference"],[5,"PhysPage",125],[1,"unit"],[5,"TrapFrame",0,443],[1,"usize"],[1,"array"],[5,"KContext",0,444],[0,"mut"],[6,"TrapType",0],[5,"PageTable",301],[5,"Formatter",445],[8,"Result",445],[6,"KContextArgs",0],[6,"TrapFrameArgs",0],[5,"Fdt",446],[6,"Option",447],[1,"tuple"],[5,"Vec",448],[1,"never"],[6,"Result",449],[5,"TypeId",450],[5,"VirtPage",125],[5,"PhysAddr",125],[5,"VirtAddr",125],[6,"Ordering",451],[1,"bool"],[1,"u8"],[1,"slice"],[5,"CStr",452],[17,"Output"],[1,"fn"],[5,"String",453],[5,"DebugConsole",236],[1,"str"],[5,"LazyInit",283],[10,"Debug",445],[5,"MappingFlags",301],[5,"PageTableWrapper",301],[1,"u64"],[17,"Item"],[10,"IntoIterator",454],[6,"MappingSize",301],[10,"Hasher",455],[5,"Iter",456],[5,"IterNames",456],[5,"Time",424],[5,"Instruction",247],[5,"IRQ",256],[5,"Barrier",264],[5,"MultiCore",274],[5,"TLB",301]],"r":[[6,444],[12,457],[13,457],[19,457],[26,443],[32,457],[36,458],[37,459],[38,458],[56,444],[57,444],[60,460],[61,460],[62,460],[77,459],[90,461],[97,444],[98,460],[99,460],[101,462],[103,461],[123,459]],"b":[[129,"impl-Add%3Cusize%3E-for-PhysPage"],[130,"impl-Add-for-PhysPage"],[163,"impl-Debug-for-PhysAddr"],[164,"impl-Display-for-PhysAddr"],[165,"impl-Display-for-VirtAddr"],[166,"impl-Debug-for-VirtAddr"],[167,"impl-Debug-for-PhysPage"],[168,"impl-Display-for-PhysPage"],[169,"impl-Debug-for-VirtPage"],[170,"impl-Display-for-VirtPage"],[173,"impl-From%3Cusize%3E-for-VirtAddr"],[174,"impl-From%3CVirtPage%3E-for-VirtAddr"],[177,"impl-From%3CPhysAddr%3E-for-PhysPage"],[178,"impl-From%3Cusize%3E-for-PhysPage"],[180,"impl-From%3CVirtAddr%3E-for-VirtPage"],[181,"impl-From%3Cusize%3E-for-VirtPage"],[327,"impl-Flags-for-MappingFlags"],[328,"impl-MappingFlags"],[358,"impl-Octal-for-MappingFlags"],[359,"impl-Binary-for-MappingFlags"],[360,"impl-LowerHex-for-MappingFlags"],[361,"impl-UpperHex-for-MappingFlags"],[362,"impl-Debug-for-MappingFlags"],[372,"impl-Flags-for-MappingFlags"],[373,"impl-MappingFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADYBMQABAAUADAAAAA4ADQAdAAsAKgAOADsACQBKAAAATgAEAFQAAABaAAgAZAABAGcARQCuAAEAsgABALUADADGAAcA0AAaAO4AAQDxAAAA8wAEAPkAAgD+AAIAAgEBAAYBAgAKAQIADwEDABUBAQAZAQkAJgEAACgBBQA2AQAASAEAAEwBDwBeAQEAYQEAAGMBAABnAQcAdQEAAHoBAACDAQAAiAEAAIwBAACPAQAAlAEBAJgBDgCqAQQAsAEBALMBAgC3AQQA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
